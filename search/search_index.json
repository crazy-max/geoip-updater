{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is geoip-updater? \u00b6 geoip-updater is a CLI application written in Go and delivered as a single executable (and a Docker image ) that lets you download and update MaxMind 's GeoIP2 databases on a time-based schedule. With Go, this can be done with an independent binary distribution across all platforms and architectures that Go supports. This support includes Linux, macOS, and Windows, on architectures like amd64, 386, ARM, PowerPC, and others. Features \u00b6 Support for MMDB and CSV databases List of Edition IDs currently supported are available here . Archive authenticity checked Internal cron implementation through go routines License \u00b6 This project is licensed under the terms of the MIT license.","title":"Home"},{"location":"#what-is-geoip-updater","text":"geoip-updater is a CLI application written in Go and delivered as a single executable (and a Docker image ) that lets you download and update MaxMind 's GeoIP2 databases on a time-based schedule. With Go, this can be done with an independent binary distribution across all platforms and architectures that Go supports. This support includes Linux, macOS, and Windows, on architectures like amd64, 386, ARM, PowerPC, and others.","title":"What is geoip-updater?"},{"location":"#features","text":"Support for MMDB and CSV databases List of Edition IDs currently supported are available here . Archive authenticity checked Internal cron implementation through go routines","title":"Features"},{"location":"#license","text":"This project is licensed under the terms of the MIT license.","title":"License"},{"location":"changelog/","text":"Changelog \u00b6 1.11.0 (2024/12/21) \u00b6 Go 1.23 (#200) Alpine Linux 3.21 (#200) Switch to github.com/mholt/archives (#201) Switch to github.com/dromara/carbon (#202) Bump github.com/alecthomas/kong to 1.6.0 (#196) Bump github.com/rs/zerolog to 1.33.0 (#183) Bump github.com/stretchr/testify to 1.10.0 (#197) Bump golang.org/x/sys to 0.28.0 (#184 #198) 1.10.0 (2024/03/10) \u00b6 GeoIP2-City and GeoIP2-Country edition ids support (#170) Generate sbom and provenance (#177) Bump github.com/alecthomas/kong to 0.9.0 (#176) Bump github.com/rs/zerolog to 1.32.0 (#172) Bump github.com/stretchr/testify to 1.9.0 (#174) Bump golang.org/x/sys to 0.18.0 (#169 #175) 1.9.0 (2023/12/17) \u00b6 Go 1.21 (#153) Bump github.com/alecthomas/kong from 0.7.1 to 0.8.1 (#154) Bump github.com/rs/zerolog from 1.28.0 to 1.31.0 (#143 #155) Bump github.com/stretchr/testify from 1.8.1 to 1.8.4 (#138 #146) Bump golang.org/x/sys from 0.3.0 to 0.11.0 (#142 #151) 1.8.0 (2022/12/31) \u00b6 Go 1.19 (#128) Alpine Linux 3.17 (#133) Enhance workflow (#129) Bump github.com/rs/zerolog from 1.27.0 to 1.28.0 (#125) Bump github.com/docker/go-units from 0.4.0 to 0.5.0 (#126) Bump github.com/stretchr/testify from 1.8.0 to 1.8.1 (#130) Bump github.com/alecthomas/kong from 0.6.1 to 0.7.1 (#132) Bump golang.org/x/sys to 0.3.0 (#134) 1.7.0 (2022/07/17) \u00b6 Go 1.18 (#120) Alpine Linux 3.16 (#122) MkDocs Material 8.3.9 (#123) Bump github.com/rs/zerolog from 1.26.1 to 1.27.0 (#114) Bump github.com/stretchr/testify from 1.7.0 to 1.8.0 (#101 #119) Bump github.com/alecthomas/kong from 0.3.0 to 0.6.1 (#100 #116) 1.6.0 (2022/01/08) \u00b6 Alpine Linux 3.15 Bump github.com/alecthomas/kong from 0.2.22 to 0.3.0 (#95) 1.5.0 (2021/12/26) \u00b6 Fix checksum URL (#94) Move from io/ioutil to io and os packages Move syscall to golang.org/x/sys Enhance dockerfiles (#93) Bump github.com/rs/zerolog from 1.25.0 to 1.26.0 (#86) Bump github.com/mholt/archiver/v3 from 3.5.0 to 3.5.1 (#85) Bump github.com/alecthomas/kong from 0.2.17 to 0.2.22 (#88 #91) Bump github.com/rs/zerolog from 1.24.0 to 1.26.1 (#84 #92) 1.4.0 (2021/09/05) \u00b6 Go 1.17 (#82) Add linux/riscv64 , darwin/arm64 , windows/arm64 artifacts MkDocs Materials 7.2.6 Wrong remaining time displayed Alpine Linux 3.14 Bump github.com/ulikunitz/xz to v0.5.8 Bump github.com/rs/zerolog from 1.21.0 to 1.24.0 (#78 #80 #83) Bump github.com/alecthomas/kong from 0.2.16 to 0.2.17 (#79) Bump codecov/codecov-action from 1 to 2 1.3.0 (2021/03/28) \u00b6 Bump github.com/rs/zerolog from 1.20.0 to 1.21.0 (#69) Docker meta v2 (#70) Deploy docs on workflow dispatch or tag Bump github.com/alecthomas/kong from 0.2.15 to 0.2.16 (#68) Go 1.16 (#67) Switch to goreleaser-xx (#66) 1.2.0 (2021/02/19) \u00b6 Refactor CI and dev workflow with buildx bake (#54) Add image-local target Single job for artifacts and image Add armv5 , ppc64le and s390x artifacts Upload artifacts Validate Remove linux/s390x Docker platform support for now Bump github.com/alecthomas/kong from 0.2.12 to 0.2.15 (#64) Bump github.com/stretchr/testify from 1.6.1 to 1.7.0 (#58) MkDocs Materials 6.2.8 Bump github.com/mholt/archiver/v3 from 3.3.2 to 3.5.0 (#47) 1.1.0 (2020/11/02) \u00b6 Use embedded tzdata package Remove --timezone flag Docker image also available on GitHub Container Registry Switch to Docker actions Go 1.15 Update deps 1.0.1 (2020/05/06) \u00b6 Remove unexpected log output 1.0.0 (2020/05/06) \u00b6 Switch to kong command-line parser Edition IDs are now passed through the --edition-ids flag Add --log-caller flag Flag --log-json not handled Latest Go 1.13 Switch to Open Container Specification labels as label-schema.org ones are deprecated Update deps 0.2.1 (2020/01/02) \u00b6 Fix incorrect checksum from archive 0.2.0 (2020/01/02) \u00b6 Improve extraction process and logging Move .md5 to work directory Use a work directory to download archives and checksums 0.1.1 (2020/01/02) \u00b6 Check write permissions 0.1.0 (2020/01/02) \u00b6 Initial version","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#1110-20241221","text":"Go 1.23 (#200) Alpine Linux 3.21 (#200) Switch to github.com/mholt/archives (#201) Switch to github.com/dromara/carbon (#202) Bump github.com/alecthomas/kong to 1.6.0 (#196) Bump github.com/rs/zerolog to 1.33.0 (#183) Bump github.com/stretchr/testify to 1.10.0 (#197) Bump golang.org/x/sys to 0.28.0 (#184 #198)","title":"1.11.0 (2024/12/21)"},{"location":"changelog/#1100-20240310","text":"GeoIP2-City and GeoIP2-Country edition ids support (#170) Generate sbom and provenance (#177) Bump github.com/alecthomas/kong to 0.9.0 (#176) Bump github.com/rs/zerolog to 1.32.0 (#172) Bump github.com/stretchr/testify to 1.9.0 (#174) Bump golang.org/x/sys to 0.18.0 (#169 #175)","title":"1.10.0 (2024/03/10)"},{"location":"changelog/#190-20231217","text":"Go 1.21 (#153) Bump github.com/alecthomas/kong from 0.7.1 to 0.8.1 (#154) Bump github.com/rs/zerolog from 1.28.0 to 1.31.0 (#143 #155) Bump github.com/stretchr/testify from 1.8.1 to 1.8.4 (#138 #146) Bump golang.org/x/sys from 0.3.0 to 0.11.0 (#142 #151)","title":"1.9.0 (2023/12/17)"},{"location":"changelog/#180-20221231","text":"Go 1.19 (#128) Alpine Linux 3.17 (#133) Enhance workflow (#129) Bump github.com/rs/zerolog from 1.27.0 to 1.28.0 (#125) Bump github.com/docker/go-units from 0.4.0 to 0.5.0 (#126) Bump github.com/stretchr/testify from 1.8.0 to 1.8.1 (#130) Bump github.com/alecthomas/kong from 0.6.1 to 0.7.1 (#132) Bump golang.org/x/sys to 0.3.0 (#134)","title":"1.8.0 (2022/12/31)"},{"location":"changelog/#170-20220717","text":"Go 1.18 (#120) Alpine Linux 3.16 (#122) MkDocs Material 8.3.9 (#123) Bump github.com/rs/zerolog from 1.26.1 to 1.27.0 (#114) Bump github.com/stretchr/testify from 1.7.0 to 1.8.0 (#101 #119) Bump github.com/alecthomas/kong from 0.3.0 to 0.6.1 (#100 #116)","title":"1.7.0 (2022/07/17)"},{"location":"changelog/#160-20220108","text":"Alpine Linux 3.15 Bump github.com/alecthomas/kong from 0.2.22 to 0.3.0 (#95)","title":"1.6.0 (2022/01/08)"},{"location":"changelog/#150-20211226","text":"Fix checksum URL (#94) Move from io/ioutil to io and os packages Move syscall to golang.org/x/sys Enhance dockerfiles (#93) Bump github.com/rs/zerolog from 1.25.0 to 1.26.0 (#86) Bump github.com/mholt/archiver/v3 from 3.5.0 to 3.5.1 (#85) Bump github.com/alecthomas/kong from 0.2.17 to 0.2.22 (#88 #91) Bump github.com/rs/zerolog from 1.24.0 to 1.26.1 (#84 #92)","title":"1.5.0 (2021/12/26)"},{"location":"changelog/#140-20210905","text":"Go 1.17 (#82) Add linux/riscv64 , darwin/arm64 , windows/arm64 artifacts MkDocs Materials 7.2.6 Wrong remaining time displayed Alpine Linux 3.14 Bump github.com/ulikunitz/xz to v0.5.8 Bump github.com/rs/zerolog from 1.21.0 to 1.24.0 (#78 #80 #83) Bump github.com/alecthomas/kong from 0.2.16 to 0.2.17 (#79) Bump codecov/codecov-action from 1 to 2","title":"1.4.0 (2021/09/05)"},{"location":"changelog/#130-20210328","text":"Bump github.com/rs/zerolog from 1.20.0 to 1.21.0 (#69) Docker meta v2 (#70) Deploy docs on workflow dispatch or tag Bump github.com/alecthomas/kong from 0.2.15 to 0.2.16 (#68) Go 1.16 (#67) Switch to goreleaser-xx (#66)","title":"1.3.0 (2021/03/28)"},{"location":"changelog/#120-20210219","text":"Refactor CI and dev workflow with buildx bake (#54) Add image-local target Single job for artifacts and image Add armv5 , ppc64le and s390x artifacts Upload artifacts Validate Remove linux/s390x Docker platform support for now Bump github.com/alecthomas/kong from 0.2.12 to 0.2.15 (#64) Bump github.com/stretchr/testify from 1.6.1 to 1.7.0 (#58) MkDocs Materials 6.2.8 Bump github.com/mholt/archiver/v3 from 3.3.2 to 3.5.0 (#47)","title":"1.2.0 (2021/02/19)"},{"location":"changelog/#110-20201102","text":"Use embedded tzdata package Remove --timezone flag Docker image also available on GitHub Container Registry Switch to Docker actions Go 1.15 Update deps","title":"1.1.0 (2020/11/02)"},{"location":"changelog/#101-20200506","text":"Remove unexpected log output","title":"1.0.1 (2020/05/06)"},{"location":"changelog/#100-20200506","text":"Switch to kong command-line parser Edition IDs are now passed through the --edition-ids flag Add --log-caller flag Flag --log-json not handled Latest Go 1.13 Switch to Open Container Specification labels as label-schema.org ones are deprecated Update deps","title":"1.0.0 (2020/05/06)"},{"location":"changelog/#021-20200102","text":"Fix incorrect checksum from archive","title":"0.2.1 (2020/01/02)"},{"location":"changelog/#020-20200102","text":"Improve extraction process and logging Move .md5 to work directory Use a work directory to download archives and checksums","title":"0.2.0 (2020/01/02)"},{"location":"changelog/#011-20200102","text":"Check write permissions","title":"0.1.1 (2020/01/02)"},{"location":"changelog/#010-20200102","text":"Initial version","title":"0.1.0 (2020/01/02)"},{"location":"contributing/","text":"Contributing \u00b6 Hi there! I'm thrilled that you'd like to contribute to this project. Your help is essential for keeping it great. Contributions to this project are released to the public under the project's open source license . Submitting a pull request \u00b6 Fork and clone the repository Configure and install the dependencies: go mod download Create a new branch: git checkout -b my-branch-name Make your changes Validate: docker buildx bake validate Test your code: docker buildx bake test Build the project: docker buildx bake artifact-all image-all Push to your fork and submit a pull request Pat your self on the back and wait for your pull request to be reviewed and merged. Here are a few things you can do that will increase the likelihood of your pull request being accepted: Make sure the README.md and any other relevant documentation are kept up-to-date . I try to follow SemVer v2.0.0 . Randomly breaking public APIs is not an option. Keep your change as focused as possible. If there are multiple changes you would like to make that are not dependent upon each other, consider submitting them as separate pull requests . Write a good commit message . Resources \u00b6 How to Contribute to Open Source Using Pull Requests GitHub Help","title":"Contributing"},{"location":"contributing/#contributing","text":"Hi there! I'm thrilled that you'd like to contribute to this project. Your help is essential for keeping it great. Contributions to this project are released to the public under the project's open source license .","title":"Contributing"},{"location":"contributing/#submitting-a-pull-request","text":"Fork and clone the repository Configure and install the dependencies: go mod download Create a new branch: git checkout -b my-branch-name Make your changes Validate: docker buildx bake validate Test your code: docker buildx bake test Build the project: docker buildx bake artifact-all image-all Push to your fork and submit a pull request Pat your self on the back and wait for your pull request to be reviewed and merged. Here are a few things you can do that will increase the likelihood of your pull request being accepted: Make sure the README.md and any other relevant documentation are kept up-to-date . I try to follow SemVer v2.0.0 . Randomly breaking public APIs is not an option. Keep your change as focused as possible. If there are multiple changes you would like to make that are not dependent upon each other, consider submitting them as separate pull requests . Write a good commit message .","title":"Submitting a pull request"},{"location":"contributing/#resources","text":"How to Contribute to Open Source Using Pull Requests GitHub Help","title":"Resources"},{"location":"donate/","text":"geoip-updater is free and open source and always will be. All kinds of contributions are welcome! The most basic way to show your support is to star the project , or to raise issues. You can also support this project by becoming a sponsor on GitHub or by making a Paypal donation to ensure this journey continues indefinitely!","title":"Donate"},{"location":"faq/","text":"FAQ \u00b6 Timezone \u00b6 By default, all interpretations and scheduling are done with your local timezone ( TZ environment variable). Cron schedule may also override the timezone to be interpreted in by providing an additional space-separated field at the beginning of the cron spec, of the form CRON_TZ=<timezone> : geoip-updater --schedule \"CRON_TZ=Asia/Tokyo */30 * * * *\" Supported edition IDs \u00b6 Here is the list of supported edition IDs by geoip-updater: GeoIP2-City GeoIP2-City-CSV GeoIP2-Country GeoIP2-Country-CSV GeoLite2-ASN GeoLite2-ASN-CSV GeoLite2-City GeoLite2-City-CSV GeoLite2-Country GeoLite2-Country-CSV","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#timezone","text":"By default, all interpretations and scheduling are done with your local timezone ( TZ environment variable). Cron schedule may also override the timezone to be interpreted in by providing an additional space-separated field at the beginning of the cron spec, of the form CRON_TZ=<timezone> : geoip-updater --schedule \"CRON_TZ=Asia/Tokyo */30 * * * *\"","title":"Timezone"},{"location":"faq/#supported-edition-ids","text":"Here is the list of supported edition IDs by geoip-updater: GeoIP2-City GeoIP2-City-CSV GeoIP2-Country GeoIP2-Country-CSV GeoLite2-ASN GeoLite2-ASN-CSV GeoLite2-City GeoLite2-City-CSV GeoLite2-Country GeoLite2-Country-CSV","title":"Supported edition IDs"},{"location":"reporting-issue/","text":"Reporting an issue \u00b6 Before submitting an issue \u00b6 First, be a good guy . Please do a search in open issues to see if the issue or feature request has already been filed. If you find your issue already exists, make relevant comments and add your reaction . Use a reaction in place of a \"+1\" comment. - upvote - downvote If you cannot find an existing issue that describes your bug or feature, submit an issue using the guidelines below. Writing good bug reports and feature requests \u00b6 File a single issue per problem and feature request. Do not enumerate multiple bugs or feature requests in the same issue. Do not add your issue as a comment to an existing issue unless it's for the identical input. Many issues look similar, but have different causes. The more information you can provide, the more likely someone will be successful reproducing the issue and finding a fix. You are now ready to create a new issue ! Closure policy \u00b6 Issues that don't have the information requested above (when applicable) will be closed immediately and the poster directed to the support guidelines. Issues that go a week without a response from original poster are subject to closure at our discretion.","title":"Reporting an issue"},{"location":"reporting-issue/#reporting-an-issue","text":"","title":"Reporting an issue"},{"location":"reporting-issue/#before-submitting-an-issue","text":"First, be a good guy . Please do a search in open issues to see if the issue or feature request has already been filed. If you find your issue already exists, make relevant comments and add your reaction . Use a reaction in place of a \"+1\" comment. - upvote - downvote If you cannot find an existing issue that describes your bug or feature, submit an issue using the guidelines below.","title":"Before submitting an issue"},{"location":"reporting-issue/#writing-good-bug-reports-and-feature-requests","text":"File a single issue per problem and feature request. Do not enumerate multiple bugs or feature requests in the same issue. Do not add your issue as a comment to an existing issue unless it's for the identical input. Many issues look similar, but have different causes. The more information you can provide, the more likely someone will be successful reproducing the issue and finding a fix. You are now ready to create a new issue !","title":"Writing good bug reports and feature requests"},{"location":"reporting-issue/#closure-policy","text":"Issues that don't have the information requested above (when applicable) will be closed immediately and the poster directed to the support guidelines. Issues that go a week without a response from original poster are subject to closure at our discretion.","title":"Closure policy"},{"location":"install/binary/","text":"Installation from binary \u00b6 Download \u00b6 geoip-updater binaries are available on releases page. Choose the archive matching the destination platform: geoip-updater_1.11.0_darwin_amd64.tar.gz geoip-updater_1.11.0_darwin_arm64.tar.gz geoip-updater_1.11.0_freebsd_386.tar.gz geoip-updater_1.11.0_freebsd_amd64.tar.gz geoip-updater_1.11.0_linux_386.tar.gz geoip-updater_1.11.0_linux_amd64.tar.gz geoip-updater_1.11.0_linux_arm64.tar.gz geoip-updater_1.11.0_linux_armv5.tar.gz geoip-updater_1.11.0_linux_armv6.tar.gz geoip-updater_1.11.0_linux_armv7.tar.gz geoip-updater_1.11.0_linux_ppc64le.tar.gz geoip-updater_1.11.0_linux_riscv64.tar.gz geoip-updater_1.11.0_linux_s390x.tar.gz geoip-updater_1.11.0_windows_386.zip geoip-updater_1.11.0_windows_amd64.zip geoip-updater_1.11.0_windows_arm64.zip And extract geoip-updater: wget -qO- https://github.com/crazy-max/geoip-updaterreleases/download/v1.11.0/geoip-updater_1.11.0_linux_amd64.tar.gz | tar -zxvf - geoip-updater After getting the binary, it can be tested with ./geoip-updater --help command and moved to a permanent location. Server configuration \u00b6 Steps below are the recommended server configuration. Prepare environment \u00b6 Create user to run geoip-updater (ex. geoip-updater ) groupadd geoip-updater useradd -s /bin/false -d /bin/null -g geoip-updater geoip-updater Create required directory structure \u00b6 mkdir -p /usr/local/share/geoip chown geoip-updater:geoip-updater /usr/local/share/geoip Copy binary to global location \u00b6 cp geoip-updater /usr/local/bin/geoip-updater Running geoip-updater \u00b6 After the above steps, two options to run geoip-updater: 1. Creating a service file (recommended) \u00b6 See how to create Linux service to start geoip-updater automatically. 2. Running from terminal \u00b6 /usr/local/bin/geoip_updater \\ --edition-ids GeoLite2-City,GeoLite2-Country \\ --license-key 0123456789ABCD \\ --download-path /usr/local/share/geoip \\ --schedule \"0 0 * * 0\" Updating to a new version \u00b6 You can update to a new version of geoip-updater by stopping it, replacing the binary at /usr/local/bin/geoip-updater and restarting the instance. If you have carried out the installation steps as described above, the binary should have the generic name geoip-updater . Do not change this, i.e. to include the version number.","title":"From binary"},{"location":"install/binary/#installation-from-binary","text":"","title":"Installation from binary"},{"location":"install/binary/#download","text":"geoip-updater binaries are available on releases page. Choose the archive matching the destination platform: geoip-updater_1.11.0_darwin_amd64.tar.gz geoip-updater_1.11.0_darwin_arm64.tar.gz geoip-updater_1.11.0_freebsd_386.tar.gz geoip-updater_1.11.0_freebsd_amd64.tar.gz geoip-updater_1.11.0_linux_386.tar.gz geoip-updater_1.11.0_linux_amd64.tar.gz geoip-updater_1.11.0_linux_arm64.tar.gz geoip-updater_1.11.0_linux_armv5.tar.gz geoip-updater_1.11.0_linux_armv6.tar.gz geoip-updater_1.11.0_linux_armv7.tar.gz geoip-updater_1.11.0_linux_ppc64le.tar.gz geoip-updater_1.11.0_linux_riscv64.tar.gz geoip-updater_1.11.0_linux_s390x.tar.gz geoip-updater_1.11.0_windows_386.zip geoip-updater_1.11.0_windows_amd64.zip geoip-updater_1.11.0_windows_arm64.zip And extract geoip-updater: wget -qO- https://github.com/crazy-max/geoip-updaterreleases/download/v1.11.0/geoip-updater_1.11.0_linux_amd64.tar.gz | tar -zxvf - geoip-updater After getting the binary, it can be tested with ./geoip-updater --help command and moved to a permanent location.","title":"Download"},{"location":"install/binary/#server-configuration","text":"Steps below are the recommended server configuration.","title":"Server configuration"},{"location":"install/binary/#prepare-environment","text":"Create user to run geoip-updater (ex. geoip-updater ) groupadd geoip-updater useradd -s /bin/false -d /bin/null -g geoip-updater geoip-updater","title":"Prepare environment"},{"location":"install/binary/#create-required-directory-structure","text":"mkdir -p /usr/local/share/geoip chown geoip-updater:geoip-updater /usr/local/share/geoip","title":"Create required directory structure"},{"location":"install/binary/#copy-binary-to-global-location","text":"cp geoip-updater /usr/local/bin/geoip-updater","title":"Copy binary to global location"},{"location":"install/binary/#running-geoip-updater","text":"After the above steps, two options to run geoip-updater:","title":"Running geoip-updater"},{"location":"install/binary/#1-creating-a-service-file-recommended","text":"See how to create Linux service to start geoip-updater automatically.","title":"1. Creating a service file (recommended)"},{"location":"install/binary/#2-running-from-terminal","text":"/usr/local/bin/geoip_updater \\ --edition-ids GeoLite2-City,GeoLite2-Country \\ --license-key 0123456789ABCD \\ --download-path /usr/local/share/geoip \\ --schedule \"0 0 * * 0\"","title":"2. Running from terminal"},{"location":"install/binary/#updating-to-a-new-version","text":"You can update to a new version of geoip-updater by stopping it, replacing the binary at /usr/local/bin/geoip-updater and restarting the instance. If you have carried out the installation steps as described above, the binary should have the generic name geoip-updater . Do not change this, i.e. to include the version number.","title":"Updating to a new version"},{"location":"install/docker/","text":"Installation with Docker \u00b6 About \u00b6 geoip-updater provides automatically updated Docker images within several registries: Registry Image Docker Hub crazymax/geoip-updater GitHub Container Registry ghcr.io/crazy-max/geoip-updater It is possible to always use the latest stable tag or to use another service that handles updating Docker images. Note Want to be notified of new releases? Check out Diun (Docker Image Update Notifier) project! Following platforms for this image are available: $ docker run --rm mplatform/mquery crazymax/geoip-updater:latest Image: crazymax/geoip-updater:latest * Manifest List: Yes * Supported platforms: - linux/amd64 - linux/arm/v6 - linux/arm/v7 - linux/arm64 - linux/386 - linux/ppc64le This reference setup guides users through the setup based on docker-compose , but the installation of docker-compose is out of scope of this documentation. To install docker-compose itself, follow the official install instructions . Usage \u00b6 version : \"3.5\" services : geoip-updater : image : crazymax/geoip-updater:latest container_name : geoip-updater volumes : - \"./data:/data\" environment : - \"EDITION_IDS=GeoLite2-ASN,GeoLite2-City,GeoLite2-Country\" - \"LICENSE_KEY=0123456789ABCD\" - \"DOWNLOAD_PATH=/data\" - \"SCHEDULE=0 0 * * 0\" - \"LOG_LEVEL=info\" - \"LOG_JSON=false\" restart : always Edit this example with your preferences and run the following commands to bring up geoip-updater: docker-compose up -d docker-compose logs -f Or use the following command: docker run -d --name geoip-updater \\ -e \"EDITION_IDS=GeoLite2-ASN,GeoLite2-City,GeoLite2-Country\" \\ -e \"LICENSE_KEY=0123456789ABCD\" \\ -e \"DOWNLOAD_PATH=/data\" \\ -e \"SCHEDULE=0 0 * * 0\" \\ -e \"LOG_LEVEL=info\" \\ -e \"LOG_JSON=false\" \\ -v \" $( pwd ) /data:/data\" \\ crazymax/geoip-updater:latest To upgrade your installation to the latest release: docker-compose pull docker-compose up -d","title":"With Docker"},{"location":"install/docker/#installation-with-docker","text":"","title":"Installation with Docker"},{"location":"install/docker/#about","text":"geoip-updater provides automatically updated Docker images within several registries: Registry Image Docker Hub crazymax/geoip-updater GitHub Container Registry ghcr.io/crazy-max/geoip-updater It is possible to always use the latest stable tag or to use another service that handles updating Docker images. Note Want to be notified of new releases? Check out Diun (Docker Image Update Notifier) project! Following platforms for this image are available: $ docker run --rm mplatform/mquery crazymax/geoip-updater:latest Image: crazymax/geoip-updater:latest * Manifest List: Yes * Supported platforms: - linux/amd64 - linux/arm/v6 - linux/arm/v7 - linux/arm64 - linux/386 - linux/ppc64le This reference setup guides users through the setup based on docker-compose , but the installation of docker-compose is out of scope of this documentation. To install docker-compose itself, follow the official install instructions .","title":"About"},{"location":"install/docker/#usage","text":"version : \"3.5\" services : geoip-updater : image : crazymax/geoip-updater:latest container_name : geoip-updater volumes : - \"./data:/data\" environment : - \"EDITION_IDS=GeoLite2-ASN,GeoLite2-City,GeoLite2-Country\" - \"LICENSE_KEY=0123456789ABCD\" - \"DOWNLOAD_PATH=/data\" - \"SCHEDULE=0 0 * * 0\" - \"LOG_LEVEL=info\" - \"LOG_JSON=false\" restart : always Edit this example with your preferences and run the following commands to bring up geoip-updater: docker-compose up -d docker-compose logs -f Or use the following command: docker run -d --name geoip-updater \\ -e \"EDITION_IDS=GeoLite2-ASN,GeoLite2-City,GeoLite2-Country\" \\ -e \"LICENSE_KEY=0123456789ABCD\" \\ -e \"DOWNLOAD_PATH=/data\" \\ -e \"SCHEDULE=0 0 * * 0\" \\ -e \"LOG_LEVEL=info\" \\ -e \"LOG_JSON=false\" \\ -v \" $( pwd ) /data:/data\" \\ crazymax/geoip-updater:latest To upgrade your installation to the latest release: docker-compose pull docker-compose up -d","title":"Usage"},{"location":"install/linux-service/","text":"Run as service on Debian based distro \u00b6 Using systemd \u00b6 Warning Make sure to follow the instructions to install from binary before. To create a new service, paste this content in /etc/systemd/system/geoip-updater.service : [Unit] Description=geoip-updater Documentation=https://crazymax.dev/geoip-updater/ After=syslog.target After=network.target [Service] RestartSec=2s Type=simple User=geoip-updater Group=geoip-updater ExecStart=/usr/local/bin/geoip-updater --log-level info Restart=always #Environment=TZ=Europe/Paris Environment=EDITION_IDS=GeoLite2-ASN,GeoLite2-City,GeoLite2-Country Environment=LICENSE_KEY=0123456789ABCD Environment=DOWNLOAD_PATH=/usr/local/share/geoip Environment=SCHEDULE=0 0 * * 0 [Install] WantedBy=multi-user.target Change the user, group, and other required startup values following your needs. Enable and start geoip-updater at boot: sudo systemctl enable geoip-updater sudo systemctl start geoip-updater To view logs: journalctl -fu geoip-updater.service","title":"Linux service"},{"location":"install/linux-service/#run-as-service-on-debian-based-distro","text":"","title":"Run as service on Debian based distro"},{"location":"install/linux-service/#using-systemd","text":"Warning Make sure to follow the instructions to install from binary before. To create a new service, paste this content in /etc/systemd/system/geoip-updater.service : [Unit] Description=geoip-updater Documentation=https://crazymax.dev/geoip-updater/ After=syslog.target After=network.target [Service] RestartSec=2s Type=simple User=geoip-updater Group=geoip-updater ExecStart=/usr/local/bin/geoip-updater --log-level info Restart=always #Environment=TZ=Europe/Paris Environment=EDITION_IDS=GeoLite2-ASN,GeoLite2-City,GeoLite2-Country Environment=LICENSE_KEY=0123456789ABCD Environment=DOWNLOAD_PATH=/usr/local/share/geoip Environment=SCHEDULE=0 0 * * 0 [Install] WantedBy=multi-user.target Change the user, group, and other required startup values following your needs. Enable and start geoip-updater at boot: sudo systemctl enable geoip-updater sudo systemctl start geoip-updater To view logs: journalctl -fu geoip-updater.service","title":"Using systemd"},{"location":"usage/cli/","text":"Command Line \u00b6 Usage \u00b6 geoip-updater [ options ] Options \u00b6 $ geoip-updater --help Usage: geoip-updater --edition-ids=GeoLite2-City,GeoLite2-Country,... --license-key=0123456789 Download and update MaxMind's GeoIP2 databases on a time-based schedule. More info: https://github.com/crazy-max/geoip-updater Flags: -h, --help Show context-sensitive help. --version --edition-ids=GeoLite2-City,GeoLite2-Country,... MaxMind Edition ID dbs to download (comma separated) ($EDITION_IDS). --license-key=0123456789 MaxMind License Key ($LICENSE_KEY) --download-path=./ Directory where databases will be stored ($DOWNLOAD_PATH). --schedule=0 0 * * 0 CRON expression format ($SCHEDULE). --log-level=\"info\" Set log level ($LOG_LEVEL). --log-json Enable JSON logging output ($LOG_JSON). --log-caller Add file:line of the caller to log output ($LOG_CALLER). Environment variables \u00b6 The following environment variables can be used in place: Name Default Description EDITION_IDS Edition IDs list (comma separated) of MaxMind's GeoIP2 databases to download LICENSE_KEY MaxMind License Key in order to download databases DOWNLOAD_PATH working dir Directory where databases will be stored SCHEDULE CRON expression to schedule geoip-updater LOG_LEVEL info Log level output LOG_JSON false Enable JSON logging output LOG_CALLER false Enable to add file:line of the caller Tip List of supported edition IDs available here .","title":"Command line"},{"location":"usage/cli/#command-line","text":"","title":"Command Line"},{"location":"usage/cli/#usage","text":"geoip-updater [ options ]","title":"Usage"},{"location":"usage/cli/#options","text":"$ geoip-updater --help Usage: geoip-updater --edition-ids=GeoLite2-City,GeoLite2-Country,... --license-key=0123456789 Download and update MaxMind's GeoIP2 databases on a time-based schedule. More info: https://github.com/crazy-max/geoip-updater Flags: -h, --help Show context-sensitive help. --version --edition-ids=GeoLite2-City,GeoLite2-Country,... MaxMind Edition ID dbs to download (comma separated) ($EDITION_IDS). --license-key=0123456789 MaxMind License Key ($LICENSE_KEY) --download-path=./ Directory where databases will be stored ($DOWNLOAD_PATH). --schedule=0 0 * * 0 CRON expression format ($SCHEDULE). --log-level=\"info\" Set log level ($LOG_LEVEL). --log-json Enable JSON logging output ($LOG_JSON). --log-caller Add file:line of the caller to log output ($LOG_CALLER).","title":"Options"},{"location":"usage/cli/#environment-variables","text":"The following environment variables can be used in place: Name Default Description EDITION_IDS Edition IDs list (comma separated) of MaxMind's GeoIP2 databases to download LICENSE_KEY MaxMind License Key in order to download databases DOWNLOAD_PATH working dir Directory where databases will be stored SCHEDULE CRON expression to schedule geoip-updater LOG_LEVEL info Log level output LOG_JSON false Enable JSON logging output LOG_CALLER false Enable to add file:line of the caller Tip List of supported edition IDs available here .","title":"Environment variables"},{"location":"usage/examples/","text":"Examples \u00b6 In this section we quickly go over basic ways to run geoip-updater. Single database \u00b6 Download GeoLite2-City database with licence key 0123456789ABCD : geoip_updater \\ --edition-ids GeoLite2-City \\ --license-key 0123456789ABCD Multi databases \u00b6 Download GeoLite2-City and GeoLite2-Country databases with licence key 0123456789ABCD to /usr/local/share/geoip with log level to debug on a time-based schedule ( every week ) geoip_updater \\ --edition-ids GeoLite2-City,GeoLite2-Country \\ --license-key 0123456789ABCD \\ --download-path /usr/local/share/geoip \\ --schedule \"0 0 * * 0\" \\ --log-level debug","title":"Examples"},{"location":"usage/examples/#examples","text":"In this section we quickly go over basic ways to run geoip-updater.","title":"Examples"},{"location":"usage/examples/#single-database","text":"Download GeoLite2-City database with licence key 0123456789ABCD : geoip_updater \\ --edition-ids GeoLite2-City \\ --license-key 0123456789ABCD","title":"Single database"},{"location":"usage/examples/#multi-databases","text":"Download GeoLite2-City and GeoLite2-Country databases with licence key 0123456789ABCD to /usr/local/share/geoip with log level to debug on a time-based schedule ( every week ) geoip_updater \\ --edition-ids GeoLite2-City,GeoLite2-Country \\ --license-key 0123456789ABCD \\ --download-path /usr/local/share/geoip \\ --schedule \"0 0 * * 0\" \\ --log-level debug","title":"Multi databases"},{"location":"usage/prerequisites/","text":"Prerequisites \u00b6 License key \u00b6 A MaxMind's license key is required in order to download GeoLite2 databases. You can obtain a license key by creating an account on the MaxMind website to download GeoLite2 databases for free. When you are registered, open your account page . Then go to Services and My License Key to Generate a new license key .","title":"Prerequisites"},{"location":"usage/prerequisites/#prerequisites","text":"","title":"Prerequisites"},{"location":"usage/prerequisites/#license-key","text":"A MaxMind's license key is required in order to download GeoLite2 databases. You can obtain a license key by creating an account on the MaxMind website to download GeoLite2 databases for free. When you are registered, open your account page . Then go to Services and My License Key to Generate a new license key .","title":"License key"}]}